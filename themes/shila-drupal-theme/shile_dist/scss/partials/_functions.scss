/**
 * @file
 * sass/partials/_functions.scss
 *
 * Importing this file must not generate any CSS.
 *
 * Functions must not use global variables.
 */

// http://hugogiraudel.com/2013/08/08/advanced-sass-list-functions/
@function first($list) {
  @return nth($list, 1);
}
@function last($list) {
  @return nth($list, length($list));
}
@function opposite-position($from) {
  @if ($from == top) {
    @return bottom;
  } @else if ($from == bottom) {
    @return top;
  } @else if ($from == left) {
    @return right;
  } @else if ($from == right) {
    @return left;
  } @else if ($from == center) {
    @return center;
  }
}

/// Checks for a valid CSS color.
///
/// @argument {string} $color
///
/// @return {boolean}
///
/// @access private

@function _is-color($color) {
  @return (type-of($color) == color) or ($color == "currentColor");
}

/// Mixes a color with black.
///
/// @argument {color} $color
///
/// @argument {number (percentage)} $percent
///   The amount of black to be mixed in.
///
/// @return {color}
///
/// @example scss
///   .element {
///     background-color: shade(#ffbb52, 60%);
///   }
///
///   // CSS Output
///   .element {
///     background-color: #664a20;
///   }

@function shade(
  $color,
  $percent
) {

  @if not _is-color($color) {
    @error "`#{$color}` is not a valid color for the `$color` argument in " +
           "the `shade` mixin.";
  } @else {
    @return mix(#000, $color, $percent);
  }
}

/// Mixes a color with white.
///
/// @argument {color} $color
///
/// @argument {number (percentage)} $percent
///   The amount of white to be mixed in.
///
/// @return {color}
///
/// @example scss
///   .element {
///     background-color: tint(#6ecaa6, 40%);
///   }
///
///   // CSS Output
///   .element {
///     background-color: #a8dfc9;
///   }

@function tint(
  $color,
  $percent
) {

  @if not _is-color($color) {
    @error "`#{$color}` is not a valid color for the `$color` argument in " +
           "the `tint` mixin.";
  } @else {
    @return mix(#fff, $color, $percent);
  }
}
