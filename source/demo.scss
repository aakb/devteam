/**
 * This stylesheet is for styles you want to include only when displaying demo
 * styles for color swatches, etc.
 * These styles will not be your production CSS.
 */

/* stylelint-disable */

@import "_base/vars";
@import "_patterns/00-elements/00-colors/00-colors";
@import "_patterns/00-elements/01-helpers/breakpoint";
@import "_patterns/00-elements/01-helpers/strip-link-styles";
@import "_patterns/00-elements/01-helpers/word-wrap";
@import "_patterns/00-elements/01-helpers/z-index";

$border-radius: 8px;
$demo-z-index-elements: one, two, three;

.demo-z-index {
  background-color: $primary-color-orange;
  border-radius: $border-radius;
  color: white;
  height: 350px;
  position: relative;
  width: 575px;

  &--one,
  &--two,
  &--three {
    border-radius: $border-radius;
    display: flex;
    height: 200px;
    justify-content: center;
    align-content: center;
    position: absolute;
    width: 200px;

    p {
      flex: 0 1 auto;
      margin: auto;
    }
  }

  &--one {
    background-color: $primary-color-green;
    left: 25px;
    top: 25px;
    z-index: z($demo-z-index-elements, one);
  }

  &--two {
    background-color: $secondary-color-blue;
    left: 175px;
    top: 75px;
    z-index: z($demo-z-index-elements, two);
  }

  &--three {
    background-color: $secondary-color-dark-blue;
    left: 350px;
    top: 125px;
    z-index: z($demo-z-index-elements, three);
  }
}

.demo-colors {
  display: flex;
  flex-wrap: wrap;
  list-style: none;
  padding: 0;
  margin: 0;

  li {
    flex: auto;
    padding: 0.3em;
    margin: 0 0.5em 0.5em 0;
    min-width: 5em;
    max-width: 14em;
    border: 1px solid #ddd;
    border-radius: 8px;
  }

  &--swatch {
    display: block;
    height: 4em;
    border-radius: 5px;
  }

  &--label {
    font-size: 90%;
    line-height: 1;

    &:before,
    &:after {
      display: block;
      margin-top: 10px;
    }
  }

  @each $color-key, $color-value in $colors {
    &--swatch {
      &.is-#{$color-key} {
        background-color: color(#{$color-key});
      }
    }

    &--label {
      &.is-#{$color-key} {
        &:before {
          content: "color(#{$color-key})";
        }

        &:after {
          content: "#{color($color-key)}";
        }
      }
    }
  }
}
